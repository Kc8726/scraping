import requests
from bs4 import BeautifulSoup

se.text, 'html.parser')

     
import requests
        # Виводимо заголовки новостей
        for headline in news_headlines:
            print(headline.text.strip())    # Проверяем успешность запроса
    if response.status_code == 200:
        # Используем BeautifulSoup для разбора HTML-кода страницы
        soup = BeautifulSoup(response.text, 'html.parser')

       
import requests
from bs4 import BeautifulSoup

se.text, 'html.parser')

        # Знаходимо заголовки новостей (замените на свои теги и классы)
        news_headlines = soup.find_all('h2', class_='news-title')

        # Виводимо заголовки новостей
        for headline in news_headlines:
            print(headline.text.strip())    # Проверяем успешность запроса
    if response.status_code == 200:
        # Используем BeautifulSoup для разбора HTML-кода страницы
        soup = BeautifulSoup(response.text, 'html.parser')

       
import requests
from bs4 import BeautifulSoup

se.text, 'html.parser')

        # Знаходимо заголовки новостей (замените на свои теги и классы)
        news_headlines = soup.find_all('h2', class_='news-title')

        # Виводимо заголовки новостей
        for headline in news_headlines:
            print(headline.text.strip())    # Проверяем успешность запроса
    if response.status_code == 200:
        # Используем BeautifulSoup для разбора HTML-кода страницы
        soup = BeautifulSoup(response.text, 'html.parser')

       
import requests
from bs4 import BeautifulSoup

se.text, 'html.parser')

        # Знаходимо заголовки новостей (замените на свои теги и классы)
        news_headlines = soup.find_all('h2', class_='news-title')

        # Виводимо заголовки новостей
        for headline in news_headlines:
            print(headline.text.strip())    # Проверяем успешность запроса
    if response.status_code == 200:
        # Используем BeautifulSoup для разбора HTML-кода страницы
        soup = BeautifulSoup(response.text, 'html.parser')

       
import requests
from bs4 import BeautifulSoup

se.text, 'html.parser')

        # Знаходимо заголовки новостей (замените на свои теги и классы)
        news_headlines = soup.find_all('h2', class_='news-title')

        # Виводимо заголовки новостей
        for headline in news_headlines:
            print(headline.text.strip())    # Проверяем успешность запроса
    if response.status_code == 200:
        # Используем BeautifulSoup для разбора HTML-кода страницы
        soup = BeautifulSoup(response.text, 'html.parser')

       
